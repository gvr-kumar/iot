1)OOPS concepts (Encapsulation, Polymorphism, Inheritance, Data Abstraction: achieved using access specifiers)

2)Static, Access specifiers (public, private, protected; by default protected if we dont specify anything), getters & setters

3)Packages & Interfaces , Dynamic resolution (base class reference can be assigned to child class object; ex: List l = new ArrayList(), 
here List is interface and ArrayList is the child concrete class)

4)Exception Handling (when to use which exception), Wrapper class, POJO (Plain Old Java Object: A class which has only variables, constructors and getters & setters but no major business logic)

5) Autoboxing, unboxing, has-a & is-a relationship, HasA : Composition & Aggregation.

Immutable classes, Helper

6)Inheritance (super, this), Overriding, Overloading, Multithreaded Programming

7)Annotations; String Pool

8) what is JVM? Performance? Heap, stack, differences? out of memory errors.

9)Garbage collection

10) Java collections: implementation of utilities (collections); Concurrent modification exception. Comparable & Comparator
Hashcode and equals

Linked Hash map and linked hash set

facade

concurrent hash map

Cloning, Serializable (Serialization), Generics, Transient

11) Enumerations and Annotations (Metadata)

12) Generics and I/O

13) Event Handling

14) The Concurrency Utilities

15) Regular Expressions

16) Servlets

17) Design patterns with examples

Pending: 

Multi-threaded Programming; facade; concurrent hash map; Enumerations and Annotations (Metadata); Generics and I/O; Event Handling

The Concurrency Utilities; Regular Expressions; Servlets; Design patterns with examples

date utilities

Frameworks:

1) Spring and Springboot

2) Microservices design principles

3) No SQL Databases

4) Hibernate

5) Kafka (events)

6) Data Indexing and parsing (searching): Elastic search


7) MVC: Model View Controller


8) EAPIS?



Misc: 

1) Formatting and plugins

2) Unit testing; Logs

3)Eclipse and other IDEs

4) Functional Programming

5) Checkins : GIT HUB 

6) OATH Implementation, JWT

7) HTTP Protocol

8) Serverless Architechture

9) Jenkins configuration and build files

10) Build process- build with maven

11)Integrate with UI and DB

12) UML diagrams 


/**

2-23-2021: String pool, Object Cloning

2021: Serialization, transient, 

2021: Enums & Generics & annotations

**/


